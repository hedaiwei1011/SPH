{"ast":null,"code":"//登陆注册模块\nimport { reqGetCode, reqRegister, reqUserLogin, reqUserInfo } from '@/api';\nconst state = {\n  code: '',\n  token: ''\n};\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOFIN(state, token) {\n    state.token = token;\n  }\n};\nconst actions = {\n  //获取验证码\n  async getCode({\n    commit\n  }, phone) {\n    //获取验证码的接口 把验证码返回，正常情况是发到用户手机上\n    let result = await reqGetCode(phone);\n    //console.log(result)\n    if (result.code == 200) {\n      commit('GETCODE', result.data);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //用户注册\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqRegister(user);\n    //console.log(result)\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //登陆 token--用户唯一标识符\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data);\n    //console.log(result)\n    if (result.code == 200) {\n      commit('USERLOFIN', result.data.token);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //获取用户信息\n  async getUserInfo() {\n    let result = await reqUserInfo();\n    console.log(result);\n  }\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqGetCode","reqRegister","reqUserLogin","reqUserInfo","state","code","token","mutations","GETCODE","USERLOFIN","actions","getCode","commit","phone","result","data","Promise","reject","Error","userRegister","user","userLogin","getUserInfo","console","log","getters"],"sources":["/Users/hedaiwei/Desktop/project-SPH/app/src/store/user/index.js"],"sourcesContent":["//登陆注册模块\nimport { reqGetCode, reqRegister, reqUserLogin, reqUserInfo } from '@/api'\nconst state = {\n  code: '',\n  token: '',\n}\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code\n  },\n  USERLOFIN(state, token) {\n    state.token = token\n  },\n}\nconst actions = {\n  //获取验证码\n  async getCode({ commit }, phone) {\n    //获取验证码的接口 把验证码返回，正常情况是发到用户手机上\n    let result = await reqGetCode(phone)\n    //console.log(result)\n    if (result.code == 200) {\n      commit('GETCODE', result.data)\n      return 'ok'\n    } else {\n      return Promise.reject(new Error('faile'))\n    }\n  },\n  //用户注册\n  async userRegister({ commit }, user) {\n    let result = await reqRegister(user)\n    //console.log(result)\n    if (result.code == 200) {\n      return 'ok'\n    } else {\n      return Promise.reject(new Error('faile'))\n    }\n  },\n  //登陆 token--用户唯一标识符\n  async userLogin({ commit }, data) {\n    let result = await reqUserLogin(data)\n    //console.log(result)\n    if (result.code == 200) {\n      commit('USERLOFIN', result.data.token)\n      return 'ok'\n    } else {\n      return Promise.reject(new Error('faile'))\n    }\n  },\n  //获取用户信息\n  async getUserInfo() {\n    let result = await reqUserInfo()\n    console.log(result)\n  },\n}\nconst getters = {}\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n}\n"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AAC1E,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,SAAS,GAAG;EAChBC,OAAOA,CAACJ,KAAK,EAAEC,IAAI,EAAE;IACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDI,SAASA,CAACL,KAAK,EAAEE,KAAK,EAAE;IACtBF,KAAK,CAACE,KAAK,GAAGA,KAAK;EACrB;AACF,CAAC;AACD,MAAMI,OAAO,GAAG;EACd;EACA,MAAMC,OAAOA,CAAC;IAAEC;EAAO,CAAC,EAAEC,KAAK,EAAE;IAC/B;IACA,IAAIC,MAAM,GAAG,MAAMd,UAAU,CAACa,KAAK,CAAC;IACpC;IACA,IAAIC,MAAM,CAACT,IAAI,IAAI,GAAG,EAAE;MACtBO,MAAM,CAAC,SAAS,EAAEE,MAAM,CAACC,IAAI,CAAC;MAC9B,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3C;EACF,CAAC;EACD;EACA,MAAMC,YAAYA,CAAC;IAAEP;EAAO,CAAC,EAAEQ,IAAI,EAAE;IACnC,IAAIN,MAAM,GAAG,MAAMb,WAAW,CAACmB,IAAI,CAAC;IACpC;IACA,IAAIN,MAAM,CAACT,IAAI,IAAI,GAAG,EAAE;MACtB,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOW,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3C;EACF,CAAC;EACD;EACA,MAAMG,SAASA,CAAC;IAAET;EAAO,CAAC,EAAEG,IAAI,EAAE;IAChC,IAAID,MAAM,GAAG,MAAMZ,YAAY,CAACa,IAAI,CAAC;IACrC;IACA,IAAID,MAAM,CAACT,IAAI,IAAI,GAAG,EAAE;MACtBO,MAAM,CAAC,WAAW,EAAEE,MAAM,CAACC,IAAI,CAACT,KAAK,CAAC;MACtC,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOU,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3C;EACF,CAAC;EACD;EACA,MAAMI,WAAWA,CAAA,EAAG;IAClB,IAAIR,MAAM,GAAG,MAAMX,WAAW,CAAC,CAAC;IAChCoB,OAAO,CAACC,GAAG,CAACV,MAAM,CAAC;EACrB;AACF,CAAC;AACD,MAAMW,OAAO,GAAG,CAAC,CAAC;AAElB,eAAe;EACbrB,KAAK;EACLG,SAAS;EACTG,OAAO;EACPe;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}